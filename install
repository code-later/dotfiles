#!/usr/bin/env ruby

# encoding: UTF-8

require 'fileutils'

def colorize(text, color_code)
  "#{color_code}#{text}\e[0m"
end

def red(text); colorize(text, "\e[31m"); end
def green(text); colorize(text, "\e[32m"); end
def yellow(text); colorize(text, "\e[33m"); end
def magenta(text); colorize(text, "\e[35m"); end

options = {
  :dotfile_dest => File.expand_path("~/"),
  :current_dir  => File.dirname(File.expand_path(__FILE__))
}

puts
puts
puts magenta("        *** DOTFILES INSTALLATION ***")
puts

puts ' * Installing dotfiles, vim config, zsh config and some utils to your system ...'
puts

puts yellow(' > Linking dotfiles found under etc/ ...')

dotfiles_to_link = Dir[File.join(options[:current_dir], "etc", "*")].each do |dotfile|
  puts " - '#{dotfile}' to '#{options[:dotfile_dest]}' ..."
  unless File.exists?(target = File.join(options[:dotfile_dest], ".#{File.basename(dotfile)}"))
    FileUtils.ln_s(dotfile, target)
  end
end

puts green(" ✔ OK!")

puts
puts yellow(' > Setting some general git configs ...')

git_configs = [
  {:key => "color.ui", :value => "auto"},
  {:key => "alias.br", :value => "branch"},
  {:key => "alias.st", :value => "status -sb"},
  {:key => "alias.ci", :value => "commit -m"},
  {:key => "alias.ca", :value => "commit -a -m"},
  {:key => "alias.co", :value => "checkout"},
  {:key => "alias.logg", :value => "log --graph"},
  {:key => "alias.lg", :value => "log --color --graph --pretty=format:'%Cred%h%Creset -%C(yellow)%d%Creset %s %Cgreen(%cr) %C(bold blue)<%an>%Creset' --abbrev-commit"},
  {:key => "merge.tool", :value => "opendiff"},
  {:key => "merge.summary", :value => "true"},
  {:key => "core.repositoryformatversion", :value => "0"},
  {:key => "core.filemode", :value => "true"},
  {:key => "core.bare", :value => "false"},
  {:key => "core.pager", :value => "less -R"},
  {:key => "core.logallrefupdates", :value => "true"},
  {:key => "branch.autosetupmerge", :value => "true"},
  {:key => "branch.master.remote", :value => "origin"},
  {:key => "branch.master.merge", :value => "refs/heads/master"},
  {:key => "i18n.commitEncoding", :value => "utf-8"},
  {:key => "log.date", :value => "local"}
]

git_configs.each do |git_config|
  puts " - #{git_config[:key]} = #{git_config[:value]} %>"
  system "git config --global --unset-all #{git_config[:key]}"
  system %Q{git config --global --add #{git_config[:key]} "#{git_config[:value]}"}
end

puts green(" ✔ OK!")

puts
puts yellow(" > Configuring Vim ...")
puts " - Vim submodules"

system "git submodule init && git submodule update"

puts " - Vim Bundles"

system "git clone https://github.com/gmarik/vundle.git ~/.vim/bundle/vundle"
system "vim +BundleInstall\! +qall"

puts green(" ✔ OK!")

puts
puts green(">>>> Everything is done. Enjoy! <<<<<")
puts
