mdc() { mkdir -p "$1" && cd "$1" }
setenv() { export $1=$2 }  # csh compatibility
sdate() { date +%Y.%m.%d }
pc() { awk "{print \$$1}" }
rot13 () { tr "[a-m][n-z][A-M][N-Z]" "[n-z][a-m][N-Z][A-M]" }

function devlog() {
  echo > log/development.log
  tail -fn 150 log/development.log
}

function prodlog() {
  echo > log/production.log
  tail -fn 150 log/production.log
}

function testlog() {
  echo > log/test.log
  tail -fn 150 log/test.log
}

function svn-ignore() {
  svn propedit svn:ignore ${1:-.}
}

function current_ips() {
  ifconfig | grep "inet " | awk '{print $2}' | sed -e s/addr://g
}

# Searches all Ruby files in the given directories (default is '.')
# and opens them in TextMate (Ment for better searching).
function find_for_mate() {
  find ${1:-.} -name "*.${2:-rb}" -print0 | xargs -0 mate
}

function ruby_version_prompt_info() {
  ruby_version=$(~/.rvm/bin/rvm-prompt 2> /dev/null) || return
  echo "($ruby_version)"
}

function current_gemset() {
  if [[ ($SHOW_GEMSET_IN_PROMPT -gt 0) ]]; then
    local gemsetName=`rvm gemset name`

    if [[ (-n ${gemsetName}) ]]
    then
      echo "@${gemsetName}"
    else
      echo "@default"
    fi
  fi
}

function hudson_build_log() {
  local project=$1
  local buildNumber=$(ssh admin@blackcat.galaxycats.com "cat /Users/admin/.hudson/jobs/${project}/nextBuildNumber")
  (( buildNumber = buildNumber - 1))

  ssh admin@blackcat.galaxycats.com "tail -fn 150 /Users/admin/.hudson/jobs/${project}/builds/${buildNumber}/log"
}

function pman() {
  man -t "${1}" | open -f -a /Applications/Preview.app
}

function tman() {
  MANWIDTH=160 MANPAGER='col -bx' man $@ | mate
}

function ss() {
  if test -f "./script/server"; then
    ./script/server
  else
    unicorn -p 3000
  fi
}
alias rs="ss"

function rc() {
  if test -f "./script/console"; then
    ./script/console
  else
    rails console
  fi
}

function repair_xml() {
  xmllint --format $1 > repaired_xml_tmp.xml
  mv repaired_xml_tmp.xml $1
}

# jump to project in dir ~projects_dir
function p() {
  cd ~projects_dir/$1
  clear
}

function update_projects() {
  ruby -e "Dir['*/.git'].each { |dir| system %Q{cd #{dir.gsub(/\/\.git/, '')}; git pull; git submodule init; git submodule update; bundle install; cd ..} }"
}

function cdf() { cd *$1*/ } # stolen from @topfunky

# Originally from Jonathan Penn, with modifications by Gary Bernhardt
function whodoneit() {
    (set -e &&
        for x in $(git grep -I --name-only $1); do
            git blame -f -- $x | grep $1;
        done
    )
}
