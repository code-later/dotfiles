$KCODE = 'UTF8' unless RUBY_VERSION > "1.9"

# load libraries
require 'rubygems'

begin
  # Wirble is a set of enhancements for irb
  # http://pablotron.org/software/wirble/README
  # Implies require 'pp', 'irb/completion', and 'rubygems'
  require 'wirble'
  Wirble.init
  # Enable colored output
  Wirble.colorize
rescue LoadError
  puts "[INFO] wirble not loaded!"
end

begin
  # Awesome print for better pretty print
  require "ap"
rescue LoadError
  puts "[INFO] awesome_print not loaded!"
end

# Clear the screen
def clear
  system 'clear'
  if Object.const_defined?("Rails")
    return "Rails environment: #{Rails.env}"
  else
    return "No rails environment - happy hacking!";
  end
end

# Shortcuts
alias cl clear
alias q exit

# Load the readline module.
IRB.conf[:USE_READLINE] = true
#Readline.basic_word_break_characters= " \t\n\\><=;|&." unless defined?(JRUBY_VERSION)

# Remove the annoying irb(main):001:0 and replace with >>
IRB.conf[:PROMPT_MODE]  = :SIMPLE

# Tab Completion
require 'irb/completion'

# Automatic Indentation
IRB.conf[:AUTO_INDENT]=true

# Save History between irb sessions
require 'irb/ext/save-history'
IRB.conf[:SAVE_HISTORY] = 100
IRB.conf[:HISTORY_FILE] = "#{ENV['HOME']}/.irb-save-history"

def pbcopy(input)
  IO.popen("pbcopy", "r+") do |clipboard|
    clipboard << input
  end

  return input
end

def log_to_stdout
  if Object.const_defined?('Rails') && Object.const_defined?('ActiveRecord')
    if Rails.respond_to?("logger=")
      ActiveRecord::Base.logger = Logger.new(STDOUT)
    else
      ActiveRecord::Base.connection.instance_variable_set :@logger, Logger.new(STDOUT)
    end
    "Logging to STDOUT..."
  end
end

#log_to_stdout
